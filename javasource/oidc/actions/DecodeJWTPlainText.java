// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package oidc.actions;

import java.util.Base64;
import com.auth0.jwt.JWT;
import com.auth0.jwt.interfaces.DecodedJWT;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * Decodes a JWT string into a plain text JSON for the header and payload. This enables the user to implement a specific JSON mapping that decodes the header or payload. Throws an exception when the token could not be decoded or verified.
 */
public class DecodeJWTPlainText extends CustomJavaAction<java.lang.String>
{
	private final java.lang.String encodedJWT;

	public DecodeJWTPlainText(
		IContext context,
		java.lang.String _encodedJWT
	)
	{
		super(context);
		this.encodedJWT = _encodedJWT;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		DecodedJWT jwt = JWT.decode(encodedJWT);
		return new String(Base64.getUrlDecoder().decode(jwt.getPayload()));
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "DecodeJWTPlainText";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
